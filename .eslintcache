[{"/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/App.js":"1","/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/components/TodoForm.js":"2","/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/components/TodoList.js":"3","/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/components/Todo.js":"4","/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/index.js":"5"},{"size":211,"mtime":1606581819686,"results":"6","hashOfConfig":"7"},{"size":1351,"mtime":1606581641535,"results":"8","hashOfConfig":"7"},{"size":1172,"mtime":1606507416827,"results":"9","hashOfConfig":"7"},{"size":1118,"mtime":1606507704699,"results":"10","hashOfConfig":"7"},{"size":197,"mtime":1606496865411,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"uex7tk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/App.js",[],["24","25"],"/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/components/TodoForm.js",[],"/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/components/TodoList.js",[],"/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/components/Todo.js",["26"],"import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubbmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","/Users/jdestine/Desktop/todo-app-react/todo-app-react/src/index.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":3,"column":8,"nodeType":"33","messageId":"34","endLine":3,"endColumn":16},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'TodoList' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]","'TodoList' is defined but never used.","Identifier","unusedVar",["40"],["41"],"no-global-assign","no-unsafe-negation"]